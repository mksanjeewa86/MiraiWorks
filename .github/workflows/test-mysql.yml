name: Test with MySQL Docker

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: changeme
          MYSQL_DATABASE: miraiworks_test
          MYSQL_USER: changeme
          MYSQL_PASSWORD: changeme
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u changeme -pchangeme"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
          --health-start-period=30s

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for MySQL
      run: |
        for i in {1..30}; do
          if mysqladmin ping -h 127.0.0.1 -P 3307 -u changeme -pchangeme --silent; then
            echo "MySQL is ready!"
            break
          fi
          echo "Waiting for MySQL... ($i/30)"
          sleep 2
        done

    - name: Verify MySQL connection
      run: |
        mysql -h 127.0.0.1 -P 3307 -u changeme -pchangeme -e "SELECT 1" miraiworks_test

    - name: Run tests
      working-directory: ./backend
      env:
        ENVIRONMENT: test
      run: |
        python -m pytest app/tests/test_todo_attachment_endpoints.py -v --tb=short

    - name: Run all tests (if todo attachment tests pass)
      working-directory: ./backend
      env:
        ENVIRONMENT: test
      run: |
        python -m pytest app/tests/ -v --tb=short
      continue-on-error: true