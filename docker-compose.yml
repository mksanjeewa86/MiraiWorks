version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: miraiworks_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: miraiworks
      MYSQL_USER: hrms
      MYSQL_PASSWORD: hrms
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 10s
    networks:
      - miraiworks-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: miraiworks_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5
      interval: 10s
    networks:
      - miraiworks-network

  # Backend API (Python FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: miraiworks_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=hrms
      - DB_PASSWORD=hrms
      - DB_NAME=miraiworks
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - PYTHONPATH=/app
    volumes:
      - ./backend:/app:ro
      - backend_logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      timeout: 10s
      retries: 5
      interval: 30s
    networks:
      - miraiworks-network

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend-nextjs
      dockerfile: Dockerfile
    container_name: miraiworks_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
      - NEXT_TELEMETRY_DISABLED=1
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000"]
      timeout: 10s
      retries: 5
      interval: 30s
    networks:
      - miraiworks-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  backend_logs:
    driver: local

networks:
  miraiworks-network:
    driver: bridge
    name: miraiworks-network