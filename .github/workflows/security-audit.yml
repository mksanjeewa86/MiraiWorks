name: Security Audit

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run security audit every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual triggering

jobs:
  frontend-audit:
    name: Frontend Security Audit
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
        id: npm-audit

      - name: Generate audit report
        if: always()
        run: |
          npm audit --json > audit-report.json || true
          echo "## Frontend Security Audit Results" >> $GITHUB_STEP_SUMMARY
          if [ -f audit-report.json ]; then
            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
            cat audit-report.json >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload audit report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-audit-report
          path: frontend/audit-report.json
          retention-days: 30

  backend-audit:
    name: Backend Security Audit
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety pip-audit

      - name: Run pip-audit
        run: pip-audit --requirement requirements.txt --format json --output audit-report.json
        continue-on-error: true

      - name: Run safety check
        run: safety check --file requirements.txt --json > safety-report.json
        continue-on-error: true

      - name: Generate audit report
        if: always()
        run: |
          echo "## Backend Security Audit Results" >> $GITHUB_STEP_SUMMARY
          if [ -f audit-report.json ]; then
            echo "### pip-audit results:" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
            cat audit-report.json >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload audit reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-audit-reports
          path: |
            backend/audit-report.json
            backend/safety-report.json
          retention-days: 30

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          deny-licenses: GPL-3.0, AGPL-3.0

  notify-on-failure:
    name: Notify on Security Issues
    runs-on: ubuntu-latest
    needs: [frontend-audit, backend-audit]
    if: failure()

    steps:
      - name: Create issue on failure
        uses: actions/github-script@v7
        with:
          script: |
            const title = 'ðŸ”’ Security Audit Failed';
            const body = `
            ## Security Audit Failure

            The automated security audit has detected potential vulnerabilities.

            **Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            **Branch:** ${{ github.ref_name }}
            **Triggered by:** ${{ github.event_name }}

            Please review the audit reports and address any critical or high-severity issues.

            ### Next Steps:
            1. Review the uploaded audit reports in the workflow artifacts
            2. Update vulnerable dependencies
            3. Run \`npm audit fix\` or \`pip install --upgrade\` as appropriate
            4. Rerun the security audit

            ---
            _This issue was automatically created by the Security Audit workflow._
            `;

            // Check if similar issue already exists
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['security', 'automated']
            });

            const existingIssue = issues.data.find(issue => issue.title === title);

            if (!existingIssue) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['security', 'automated', 'dependencies']
              });
            }
