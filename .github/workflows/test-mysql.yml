name: Test with MySQL Docker

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: changeme
          MYSQL_DATABASE: miraiworks_test
          MYSQL_USER: changeme
          MYSQL_PASSWORD: changeme
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u changeme -pchangeme"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
          --health-start-period=30s

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for MySQL
      run: |
        for i in {1..30}; do
          if mysqladmin ping -h 127.0.0.1 -P 3307 -u changeme -pchangeme --silent; then
            echo "MySQL is ready!"
            break
          fi
          echo "Waiting for MySQL... ($i/30)"
          sleep 2
        done

    - name: Verify MySQL connection
      run: |
        mysql -h 127.0.0.1 -P 3307 -u changeme -pchangeme -e "SELECT 1" miraiworks_test

    - name: Run tests
      working-directory: ./backend
      continue-on-error: true
      id: specific-tests
      env:
        ENVIRONMENT: test
      run: |
        python -m pytest app/tests/test_todo_attachment_endpoints.py -v --tb=short > ../specific-tests.log 2>&1
        SPECIFIC_EXIT=$?
        cat ../specific-tests.log
        echo "exit_code=$SPECIFIC_EXIT" >> $GITHUB_OUTPUT
        exit 0

    - name: Run all tests
      working-directory: ./backend
      continue-on-error: true
      id: all-tests
      env:
        ENVIRONMENT: test
      run: |
        python -m pytest app/tests/ -v --tb=short > ../all-tests.log 2>&1
        ALL_EXIT=$?
        cat ../all-tests.log
        echo "exit_code=$ALL_EXIT" >> $GITHUB_OUTPUT
        exit 0

    - name: Generate Test Report
      if: always()
      run: |
        cat > test-mysql-report.md << 'EOF'
        # MySQL Test Report

        ## Summary

        | Test Suite | Status |
        |------------|--------|
        | Todo Attachment Tests | ${{ steps.specific-tests.outputs.exit_code == '0' && '✅ passed' || '❌ failed' }} |
        | All Tests | ${{ steps.all-tests.outputs.exit_code == '0' && '✅ passed' || '❌ failed' }} |

        ## Detailed Results

        ### Todo Attachment Tests
        EOF

        if [ -f specific-tests.log ]; then
          echo '```' >> test-mysql-report.md
          cat specific-tests.log >> test-mysql-report.md
          echo '```' >> test-mysql-report.md
        fi

        cat >> test-mysql-report.md << 'EOF'

        ### All Tests
        EOF

        if [ -f all-tests.log ]; then
          echo '```' >> test-mysql-report.md
          tail -200 all-tests.log >> test-mysql-report.md
          echo '```' >> test-mysql-report.md
        fi

        # Add to GitHub Step Summary
        cat test-mysql-report.md >> $GITHUB_STEP_SUMMARY

    - name: Upload Test Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-mysql-reports
        path: |
          test-mysql-report.md
          specific-tests.log
          all-tests.log
        retention-days: 30