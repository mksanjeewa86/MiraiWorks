"""Add question banks and exam workflow integration

Revision ID: 7b40e9699400
Revises: 194a6252792a
Create Date: 2025-10-05 14:50:23.125703

"""
from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from sqlalchemy.dialects import mysql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "7b40e9699400"
down_revision: Union[str, None] = "194a6252792a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Create question_banks table
    op.create_table(
        "question_banks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("exam_type", sa.String(length=50), nullable=False),
        sa.Column("category", sa.String(length=100), nullable=True),
        sa.Column("difficulty", sa.String(length=20), nullable=True),
        sa.Column(
            "is_public", sa.Boolean(), nullable=False, server_default=sa.text("0")
        ),
        sa.Column("company_id", sa.Integer(), nullable=True),
        sa.Column("created_by_id", sa.Integer(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["company_id"], ["companies.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["created_by_id"], ["users.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_question_banks_company_id"),
        "question_banks",
        ["company_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_question_banks_exam_type"),
        "question_banks",
        ["exam_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_question_banks_category"), "question_banks", ["category"], unique=False
    )
    op.create_index(
        op.f("ix_question_banks_difficulty"),
        "question_banks",
        ["difficulty"],
        unique=False,
    )
    op.create_index(
        op.f("ix_question_banks_is_public"),
        "question_banks",
        ["is_public"],
        unique=False,
    )

    # Create question_bank_items table
    op.create_table(
        "question_bank_items",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("bank_id", sa.Integer(), nullable=False),
        sa.Column("question_text", sa.Text(), nullable=False),
        sa.Column("question_type", sa.String(length=50), nullable=False),
        sa.Column(
            "order_index", sa.Integer(), nullable=False, server_default=sa.text("0")
        ),
        sa.Column("points", sa.Float(), nullable=False, server_default=sa.text("1.0")),
        sa.Column("time_limit_seconds", sa.Integer(), nullable=True),
        sa.Column("options", sa.JSON(), nullable=True),
        sa.Column("correct_answers", sa.JSON(), nullable=True),
        sa.Column("max_length", sa.Integer(), nullable=True),
        sa.Column("min_length", sa.Integer(), nullable=True),
        sa.Column("rating_scale", sa.Integer(), nullable=True),
        sa.Column("explanation", sa.Text(), nullable=True),
        sa.Column("tags", sa.JSON(), nullable=True),
        sa.Column("difficulty", sa.String(length=20), nullable=True),
        sa.Column("category", sa.String(length=100), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["bank_id"], ["question_banks.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_question_bank_items_bank_id"),
        "question_bank_items",
        ["bank_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_question_bank_items_order_index"),
        "question_bank_items",
        ["order_index"],
        unique=False,
    )
    op.create_index(
        op.f("ix_question_bank_items_difficulty"),
        "question_bank_items",
        ["difficulty"],
        unique=False,
    )
    op.create_index(
        op.f("ix_question_bank_items_category"),
        "question_bank_items",
        ["category"],
        unique=False,
    )

    op.drop_index("ix_node_executions_assigned_to", table_name="node_executions")
    op.drop_index(
        "ix_node_executions_candidate_process_id", table_name="node_executions"
    )
    op.drop_index("ix_node_executions_created_at", table_name="node_executions")
    op.drop_index("ix_node_executions_due_date", table_name="node_executions")
    op.drop_index("ix_node_executions_interview_id", table_name="node_executions")
    op.drop_index("ix_node_executions_node_id", table_name="node_executions")
    op.drop_index("ix_node_executions_result", table_name="node_executions")
    op.drop_index("ix_node_executions_status", table_name="node_executions")
    op.drop_index("ix_node_executions_status_assigned", table_name="node_executions")
    op.drop_index("ix_node_executions_todo_id", table_name="node_executions")
    op.drop_index("uq_candidate_node_execution", table_name="node_executions")
    op.drop_table("node_executions")
    op.drop_index(
        "ix_candidate_processes_assigned_recruiter_id", table_name="candidate_processes"
    )
    op.drop_index(
        "ix_candidate_processes_candidate_id", table_name="candidate_processes"
    )
    op.drop_index("ix_candidate_processes_created_at", table_name="candidate_processes")
    op.drop_index(
        "ix_candidate_processes_current_node_id", table_name="candidate_processes"
    )
    op.drop_index(
        "ix_candidate_processes_final_result", table_name="candidate_processes"
    )
    op.drop_index("ix_candidate_processes_process_id", table_name="candidate_processes")
    op.drop_index("ix_candidate_processes_status", table_name="candidate_processes")
    op.drop_index(
        "ix_candidate_processes_status_recruiter", table_name="candidate_processes"
    )
    op.drop_index("uq_candidate_process", table_name="candidate_processes")
    op.drop_table("candidate_processes")
    op.drop_index("ix_node_connections_condition_type", table_name="node_connections")
    op.drop_index("ix_node_connections_created_at", table_name="node_connections")
    op.drop_index("ix_node_connections_process_id", table_name="node_connections")
    op.drop_index("ix_node_connections_source_node_id", table_name="node_connections")
    op.drop_index("ix_node_connections_target_node_id", table_name="node_connections")
    op.drop_table("node_connections")
    op.create_foreign_key(
        None, "attachments", "messages", ["message_id"], ["id"], ondelete="CASCADE"
    )
    op.create_index(
        op.f("ix_calendar_connections_id"), "calendar_connections", ["id"], unique=False
    )
    op.drop_index("idx_calendar_events_creator_id", table_name="calendar_events")
    op.drop_index("idx_calendar_events_event_type", table_name="calendar_events")
    op.drop_index("idx_calendar_events_start_datetime", table_name="calendar_events")
    op.drop_index("idx_calendar_events_status", table_name="calendar_events")
    op.create_index(
        op.f("ix_calendar_events_creator_id"),
        "calendar_events",
        ["creator_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_calendar_events_event_type"),
        "calendar_events",
        ["event_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_calendar_events_id"), "calendar_events", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_calendar_events_start_datetime"),
        "calendar_events",
        ["start_datetime"],
        unique=False,
    )
    op.create_index(
        op.f("ix_calendar_events_status"), "calendar_events", ["status"], unique=False
    )
    op.add_column("exam_assignments", sa.Column("todo_id", sa.Integer(), nullable=True))
    op.add_column(
        "exam_assignments",
        sa.Column("workflow_node_execution_id", sa.Integer(), nullable=True),
    )
    op.create_index(
        op.f("ix_exam_assignments_todo_id"),
        "exam_assignments",
        ["todo_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_exam_assignments_workflow_node_execution_id"),
        "exam_assignments",
        ["workflow_node_execution_id"],
        unique=False,
    )
    op.create_foreign_key(
        None,
        "exam_assignments",
        "workflow_node_executions",
        ["workflow_node_execution_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.create_foreign_key(
        None, "exam_assignments", "todos", ["todo_id"], ["id"], ondelete="SET NULL"
    )
    op.add_column(
        "exam_questions", sa.Column("source_type", sa.String(length=20), nullable=False)
    )
    op.add_column(
        "exam_questions", sa.Column("source_bank_id", sa.Integer(), nullable=True)
    )
    op.add_column(
        "exam_questions", sa.Column("source_question_id", sa.Integer(), nullable=True)
    )
    op.create_index(
        op.f("ix_exam_questions_source_type"),
        "exam_questions",
        ["source_type"],
        unique=False,
    )
    op.create_foreign_key(
        None,
        "exam_questions",
        "question_banks",
        ["source_bank_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.create_foreign_key(
        None,
        "exam_questions",
        "question_bank_items",
        ["source_question_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.add_column(
        "exams", sa.Column("question_selection_rules", sa.JSON(), nullable=True)
    )
    op.drop_index("ix_holidays_date_country", table_name="holidays")
    op.drop_index("ix_holidays_year_country", table_name="holidays")
    op.create_index(op.f("ix_holidays_id"), "holidays", ["id"], unique=False)
    op.drop_index("ix_direct_messages_created_at", table_name="messages")
    op.drop_index("ix_direct_messages_id", table_name="messages")
    op.drop_index("ix_direct_messages_is_read", table_name="messages")
    op.drop_index("ix_direct_messages_recipient_id", table_name="messages")
    op.drop_index("ix_direct_messages_reply_to_id", table_name="messages")
    op.drop_index("ix_direct_messages_sender_id", table_name="messages")
    op.drop_index("ix_direct_messages_type", table_name="messages")
    op.create_index(
        op.f("ix_messages_created_at"), "messages", ["created_at"], unique=False
    )
    op.create_index(op.f("ix_messages_id"), "messages", ["id"], unique=False)
    op.create_index(op.f("ix_messages_is_read"), "messages", ["is_read"], unique=False)
    op.create_index(
        op.f("ix_messages_recipient_id"), "messages", ["recipient_id"], unique=False
    )
    op.create_index(
        op.f("ix_messages_reply_to_id"), "messages", ["reply_to_id"], unique=False
    )
    op.create_index(
        op.f("ix_messages_sender_id"), "messages", ["sender_id"], unique=False
    )
    op.create_index(op.f("ix_messages_type"), "messages", ["type"], unique=False)
    op.alter_column(
        "resumes",
        "status",
        existing_type=mysql.ENUM("draft", "published", "archived"),
        nullable=True,
        existing_server_default=sa.text("'draft'"),  # type: ignore[arg-type]
    )
    op.alter_column(
        "resumes",
        "visibility",
        existing_type=mysql.ENUM("private", "public", "unlisted"),
        nullable=True,
        existing_server_default=sa.text("'private'"),  # type: ignore[arg-type]
    )
    op.drop_index("ix_resumes_slug", table_name="resumes")
    op.drop_column("resumes", "slug")
    op.add_column("todos", sa.Column("exam_id", sa.Integer(), nullable=True))
    op.add_column("todos", sa.Column("exam_assignment_id", sa.Integer(), nullable=True))
    op.add_column("todos", sa.Column("exam_config", sa.JSON(), nullable=True))
    op.drop_index("idx_todos_assigned_user_id", table_name="todos")
    op.drop_index("idx_todos_visibility", table_name="todos")
    op.create_index(
        op.f("ix_todos_assigned_user_id"), "todos", ["assigned_user_id"], unique=False
    )
    op.create_index(
        op.f("ix_todos_exam_assignment_id"),
        "todos",
        ["exam_assignment_id"],
        unique=False,
    )
    op.create_index(op.f("ix_todos_exam_id"), "todos", ["exam_id"], unique=False)
    op.create_index(op.f("ix_todos_visibility"), "todos", ["visibility"], unique=False)
    op.create_foreign_key(
        None, "todos", "exams", ["exam_id"], ["id"], ondelete="SET NULL"
    )
    op.create_foreign_key(
        None,
        "todos",
        "exam_assignments",
        ["exam_assignment_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.alter_column(
        "user_connections",
        "creation_type",
        existing_type=mysql.VARCHAR(length=20),
        comment="Type of creation: 'automatic' or 'manual'",
        existing_comment="Type of creation: automatic or manual",
        existing_nullable=False,
        existing_server_default=sa.text("'manual'"),  # type: ignore[arg-type]
    )
    op.alter_column(
        "users",
        "created_by",
        existing_type=mysql.INTEGER(),
        comment=None,
        existing_comment="ID of user who created this user (NULL for self-registration)",
        existing_nullable=True,
    )
    op.drop_index("ix_video_calls_scheduled_at", table_name="video_calls")
    op.drop_index("ix_video_calls_status", table_name="video_calls")
    op.add_column(
        "workflow_nodes", sa.Column("workflow_id", sa.Integer(), nullable=False)
    )
    op.drop_index("ix_process_nodes_created_at", table_name="workflow_nodes")
    op.drop_index("ix_process_nodes_created_by", table_name="workflow_nodes")
    op.drop_index("ix_process_nodes_node_type", table_name="workflow_nodes")
    op.drop_index("ix_process_nodes_process_id", table_name="workflow_nodes")
    op.drop_index("ix_process_nodes_process_sequence", table_name="workflow_nodes")
    op.drop_index("ix_process_nodes_sequence_order", table_name="workflow_nodes")
    op.drop_index("ix_process_nodes_status", table_name="workflow_nodes")
    op.drop_index("uq_process_node_sequence", table_name="workflow_nodes")
    op.create_index(
        op.f("ix_workflow_nodes_created_at"),
        "workflow_nodes",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_workflow_nodes_created_by"),
        "workflow_nodes",
        ["created_by"],
        unique=False,
    )
    op.create_index(
        op.f("ix_workflow_nodes_node_type"),
        "workflow_nodes",
        ["node_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_workflow_nodes_sequence_order"),
        "workflow_nodes",
        ["sequence_order"],
        unique=False,
    )
    op.create_index(
        op.f("ix_workflow_nodes_status"), "workflow_nodes", ["status"], unique=False
    )
    op.create_index(
        op.f("ix_workflow_nodes_workflow_id"),
        "workflow_nodes",
        ["workflow_id"],
        unique=False,
    )
    op.create_unique_constraint(
        "uq_workflow_node_sequence", "workflow_nodes", ["workflow_id", "sequence_order"]
    )
    op.drop_constraint("workflow_nodes_ibfk_1", "workflow_nodes", type_="foreignkey")
    op.create_foreign_key(
        None, "workflow_nodes", "workflows", ["workflow_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_column("workflow_nodes", "process_id")
    op.add_column(
        "workflow_viewers", sa.Column("workflow_id", sa.Integer(), nullable=False)
    )
    op.drop_index("ix_process_viewers_added_at", table_name="workflow_viewers")
    op.drop_index("ix_process_viewers_added_by", table_name="workflow_viewers")
    op.drop_index("ix_process_viewers_process_id", table_name="workflow_viewers")
    op.drop_index("ix_process_viewers_role", table_name="workflow_viewers")
    op.drop_index("ix_process_viewers_user_id", table_name="workflow_viewers")
    op.drop_index("uq_process_viewer", table_name="workflow_viewers")
    op.create_index(
        op.f("ix_workflow_viewers_added_at"),
        "workflow_viewers",
        ["added_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_workflow_viewers_added_by"),
        "workflow_viewers",
        ["added_by"],
        unique=False,
    )
    op.create_index(
        op.f("ix_workflow_viewers_role"), "workflow_viewers", ["role"], unique=False
    )
    op.create_index(
        op.f("ix_workflow_viewers_user_id"),
        "workflow_viewers",
        ["user_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_workflow_viewers_workflow_id"),
        "workflow_viewers",
        ["workflow_id"],
        unique=False,
    )
    op.create_unique_constraint(
        "uq_workflow_viewer", "workflow_viewers", ["workflow_id", "user_id"]
    )
    op.drop_constraint(
        "workflow_viewers_ibfk_1", "workflow_viewers", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "workflow_viewers",
        "workflows",
        ["workflow_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_column("workflow_viewers", "process_id")
    op.drop_index("ix_recruitment_processes_created_at", table_name="workflows")
    op.drop_index("ix_recruitment_processes_created_by", table_name="workflows")
    op.drop_index(
        "ix_recruitment_processes_employer_company_id", table_name="workflows"
    )
    op.drop_index("ix_recruitment_processes_is_deleted", table_name="workflows")
    op.drop_index("ix_recruitment_processes_position_id", table_name="workflows")
    op.drop_index("ix_recruitment_processes_status", table_name="workflows")
    op.drop_index("ix_recruitment_processes_status_company", table_name="workflows")
    op.create_index(
        op.f("ix_workflows_created_at"), "workflows", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_workflows_created_by"), "workflows", ["created_by"], unique=False
    )
    op.create_index(
        op.f("ix_workflows_employer_company_id"),
        "workflows",
        ["employer_company_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_workflows_is_deleted"), "workflows", ["is_deleted"], unique=False
    )
    op.create_index(
        op.f("ix_workflows_position_id"), "workflows", ["position_id"], unique=False
    )
    op.create_index(op.f("ix_workflows_status"), "workflows", ["status"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_workflows_status"), table_name="workflows")
    op.drop_index(op.f("ix_workflows_position_id"), table_name="workflows")
    op.drop_index(op.f("ix_workflows_is_deleted"), table_name="workflows")
    op.drop_index(op.f("ix_workflows_employer_company_id"), table_name="workflows")
    op.drop_index(op.f("ix_workflows_created_by"), table_name="workflows")
    op.drop_index(op.f("ix_workflows_created_at"), table_name="workflows")
    op.create_index(
        "ix_recruitment_processes_status_company",
        "workflows",
        ["status", "employer_company_id"],
        unique=False,
    )
    op.create_index(
        "ix_recruitment_processes_status", "workflows", ["status"], unique=False
    )
    op.create_index(
        "ix_recruitment_processes_position_id",
        "workflows",
        ["position_id"],
        unique=False,
    )
    op.create_index(
        "ix_recruitment_processes_is_deleted", "workflows", ["is_deleted"], unique=False
    )
    op.create_index(
        "ix_recruitment_processes_employer_company_id",
        "workflows",
        ["employer_company_id"],
        unique=False,
    )
    op.create_index(
        "ix_recruitment_processes_created_by", "workflows", ["created_by"], unique=False
    )
    op.create_index(
        "ix_recruitment_processes_created_at", "workflows", ["created_at"], unique=False
    )
    op.add_column(
        "workflow_viewers",
        sa.Column("process_id", mysql.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "workflow_viewers", type_="foreignkey")  # type: ignore[arg-type]
    op.create_foreign_key(
        "workflow_viewers_ibfk_1",
        "workflow_viewers",
        "workflows",
        ["process_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint("uq_workflow_viewer", "workflow_viewers", type_="unique")
    op.drop_index(
        op.f("ix_workflow_viewers_workflow_id"), table_name="workflow_viewers"
    )
    op.drop_index(op.f("ix_workflow_viewers_user_id"), table_name="workflow_viewers")
    op.drop_index(op.f("ix_workflow_viewers_role"), table_name="workflow_viewers")
    op.drop_index(op.f("ix_workflow_viewers_added_by"), table_name="workflow_viewers")
    op.drop_index(op.f("ix_workflow_viewers_added_at"), table_name="workflow_viewers")
    op.create_index(
        "uq_process_viewer", "workflow_viewers", ["process_id", "user_id"], unique=False
    )
    op.create_index(
        "ix_process_viewers_user_id", "workflow_viewers", ["user_id"], unique=False
    )
    op.create_index(
        "ix_process_viewers_role", "workflow_viewers", ["role"], unique=False
    )
    op.create_index(
        "ix_process_viewers_process_id",
        "workflow_viewers",
        ["process_id"],
        unique=False,
    )
    op.create_index(
        "ix_process_viewers_added_by", "workflow_viewers", ["added_by"], unique=False
    )
    op.create_index(
        "ix_process_viewers_added_at", "workflow_viewers", ["added_at"], unique=False
    )
    op.drop_column("workflow_viewers", "workflow_id")
    op.add_column(
        "workflow_nodes",
        sa.Column("process_id", mysql.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "workflow_nodes", type_="foreignkey")  # type: ignore[arg-type]
    op.create_foreign_key(
        "workflow_nodes_ibfk_1",
        "workflow_nodes",
        "workflows",
        ["process_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_constraint("uq_workflow_node_sequence", "workflow_nodes", type_="unique")
    op.drop_index(op.f("ix_workflow_nodes_workflow_id"), table_name="workflow_nodes")
    op.drop_index(op.f("ix_workflow_nodes_status"), table_name="workflow_nodes")
    op.drop_index(op.f("ix_workflow_nodes_sequence_order"), table_name="workflow_nodes")
    op.drop_index(op.f("ix_workflow_nodes_node_type"), table_name="workflow_nodes")
    op.drop_index(op.f("ix_workflow_nodes_created_by"), table_name="workflow_nodes")
    op.drop_index(op.f("ix_workflow_nodes_created_at"), table_name="workflow_nodes")
    op.create_index(
        "uq_process_node_sequence",
        "workflow_nodes",
        ["process_id", "sequence_order"],
        unique=False,
    )
    op.create_index(
        "ix_process_nodes_status", "workflow_nodes", ["status"], unique=False
    )
    op.create_index(
        "ix_process_nodes_sequence_order",
        "workflow_nodes",
        ["sequence_order"],
        unique=False,
    )
    op.create_index(
        "ix_process_nodes_process_sequence",
        "workflow_nodes",
        ["process_id", "sequence_order"],
        unique=False,
    )
    op.create_index(
        "ix_process_nodes_process_id", "workflow_nodes", ["process_id"], unique=False
    )
    op.create_index(
        "ix_process_nodes_node_type", "workflow_nodes", ["node_type"], unique=False
    )
    op.create_index(
        "ix_process_nodes_created_by", "workflow_nodes", ["created_by"], unique=False
    )
    op.create_index(
        "ix_process_nodes_created_at", "workflow_nodes", ["created_at"], unique=False
    )
    op.drop_column("workflow_nodes", "workflow_id")
    op.create_index("ix_video_calls_status", "video_calls", ["status"], unique=False)
    op.create_index(
        "ix_video_calls_scheduled_at", "video_calls", ["scheduled_at"], unique=False
    )
    op.alter_column(
        "users",
        "created_by",
        existing_type=mysql.INTEGER(),
        comment="ID of user who created this user (NULL for self-registration)",
        existing_nullable=True,
    )
    op.alter_column(
        "user_connections",
        "creation_type",
        existing_type=mysql.VARCHAR(length=20),
        comment="Type of creation: automatic or manual",
        existing_comment="Type of creation: 'automatic' or 'manual'",
        existing_nullable=False,
        existing_server_default=sa.text("'manual'"),  # type: ignore[arg-type]
    )
    op.drop_constraint(None, "todos", type_="foreignkey")  # type: ignore[arg-type]
    op.drop_constraint(None, "todos", type_="foreignkey")  # type: ignore[arg-type]
    op.drop_index(op.f("ix_todos_visibility"), table_name="todos")
    op.drop_index(op.f("ix_todos_exam_id"), table_name="todos")
    op.drop_index(op.f("ix_todos_exam_assignment_id"), table_name="todos")
    op.drop_index(op.f("ix_todos_assigned_user_id"), table_name="todos")
    op.create_index("idx_todos_visibility", "todos", ["visibility"], unique=False)
    op.create_index(
        "idx_todos_assigned_user_id", "todos", ["assigned_user_id"], unique=False
    )
    op.drop_column("todos", "exam_config")
    op.drop_column("todos", "exam_assignment_id")
    op.drop_column("todos", "exam_id")
    op.add_column(
        "resumes", sa.Column("slug", mysql.VARCHAR(length=100), nullable=True)
    )
    op.create_index("ix_resumes_slug", "resumes", ["slug"], unique=False)
    op.alter_column(
        "resumes",
        "visibility",
        existing_type=mysql.ENUM("private", "public", "unlisted"),
        nullable=False,
        existing_server_default=sa.text("'private'"),  # type: ignore[arg-type]
    )
    op.alter_column(
        "resumes",
        "status",
        existing_type=mysql.ENUM("draft", "published", "archived"),
        nullable=False,
        existing_server_default=sa.text("'draft'"),  # type: ignore[arg-type]
    )
    op.drop_index(op.f("ix_messages_type"), table_name="messages")
    op.drop_index(op.f("ix_messages_sender_id"), table_name="messages")
    op.drop_index(op.f("ix_messages_reply_to_id"), table_name="messages")
    op.drop_index(op.f("ix_messages_recipient_id"), table_name="messages")
    op.drop_index(op.f("ix_messages_is_read"), table_name="messages")
    op.drop_index(op.f("ix_messages_id"), table_name="messages")
    op.drop_index(op.f("ix_messages_created_at"), table_name="messages")
    op.create_index("ix_direct_messages_type", "messages", ["type"], unique=False)
    op.create_index(
        "ix_direct_messages_sender_id", "messages", ["sender_id"], unique=False
    )
    op.create_index(
        "ix_direct_messages_reply_to_id", "messages", ["reply_to_id"], unique=False
    )
    op.create_index(
        "ix_direct_messages_recipient_id", "messages", ["recipient_id"], unique=False
    )
    op.create_index("ix_direct_messages_is_read", "messages", ["is_read"], unique=False)
    op.create_index("ix_direct_messages_id", "messages", ["id"], unique=False)
    op.create_index(
        "ix_direct_messages_created_at", "messages", ["created_at"], unique=False
    )
    op.drop_index(op.f("ix_holidays_id"), table_name="holidays")
    op.create_index(
        "ix_holidays_year_country", "holidays", ["year", "country"], unique=False
    )
    op.create_index(
        "ix_holidays_date_country", "holidays", ["date", "country"], unique=False
    )
    op.drop_column("exams", "question_selection_rules")
    op.drop_constraint(None, "exam_questions", type_="foreignkey")  # type: ignore[arg-type]
    op.drop_constraint(None, "exam_questions", type_="foreignkey")  # type: ignore[arg-type]
    op.drop_index(op.f("ix_exam_questions_source_type"), table_name="exam_questions")
    op.drop_column("exam_questions", "source_question_id")
    op.drop_column("exam_questions", "source_bank_id")
    op.drop_column("exam_questions", "source_type")
    op.drop_constraint(None, "exam_assignments", type_="foreignkey")  # type: ignore[arg-type]
    op.drop_constraint(None, "exam_assignments", type_="foreignkey")  # type: ignore[arg-type]
    op.drop_index(
        op.f("ix_exam_assignments_workflow_node_execution_id"),
        table_name="exam_assignments",
    )
    op.drop_index(op.f("ix_exam_assignments_todo_id"), table_name="exam_assignments")
    op.drop_column("exam_assignments", "workflow_node_execution_id")
    op.drop_column("exam_assignments", "todo_id")
    op.drop_index(op.f("ix_calendar_events_status"), table_name="calendar_events")
    op.drop_index(
        op.f("ix_calendar_events_start_datetime"), table_name="calendar_events"
    )
    op.drop_index(op.f("ix_calendar_events_id"), table_name="calendar_events")
    op.drop_index(op.f("ix_calendar_events_event_type"), table_name="calendar_events")
    op.drop_index(op.f("ix_calendar_events_creator_id"), table_name="calendar_events")
    op.create_index(
        "idx_calendar_events_status", "calendar_events", ["status"], unique=False
    )
    op.create_index(
        "idx_calendar_events_start_datetime",
        "calendar_events",
        ["start_datetime"],
        unique=False,
    )
    op.create_index(
        "idx_calendar_events_event_type",
        "calendar_events",
        ["event_type"],
        unique=False,
    )
    op.create_index(
        "idx_calendar_events_creator_id",
        "calendar_events",
        ["creator_id"],
        unique=False,
    )
    op.drop_index(op.f("ix_calendar_connections_id"), table_name="calendar_connections")
    op.drop_constraint(None, "attachments", type_="foreignkey")  # type: ignore[arg-type]
    op.create_table(
        "node_connections",
        sa.Column("id", mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("process_id", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "source_node_id", mysql.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "target_node_id", mysql.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("condition_type", mysql.VARCHAR(length=50), nullable=False),
        sa.Column("condition_config", mysql.JSON(), nullable=True),
        sa.Column("label", mysql.VARCHAR(length=255), nullable=True),
        sa.Column("description", mysql.VARCHAR(length=500), nullable=True),
        sa.Column(
            "created_at",
            mysql.DATETIME(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["process_id"],
            ["workflows.id"],
            name="node_connections_ibfk_1",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["source_node_id"],
            ["workflow_nodes.id"],
            name="node_connections_ibfk_2",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["target_node_id"],
            ["workflow_nodes.id"],
            name="node_connections_ibfk_3",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
        mysql_collate="utf8mb4_0900_ai_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_index(
        "ix_node_connections_target_node_id",
        "node_connections",
        ["target_node_id"],
        unique=False,
    )
    op.create_index(
        "ix_node_connections_source_node_id",
        "node_connections",
        ["source_node_id"],
        unique=False,
    )
    op.create_index(
        "ix_node_connections_process_id",
        "node_connections",
        ["process_id"],
        unique=False,
    )
    op.create_index(
        "ix_node_connections_created_at",
        "node_connections",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        "ix_node_connections_condition_type",
        "node_connections",
        ["condition_type"],
        unique=False,
    )
    op.create_table(
        "candidate_processes",
        sa.Column("id", mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("candidate_id", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("process_id", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "current_node_id", mysql.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column("status", mysql.VARCHAR(length=50), nullable=False),
        sa.Column(
            "assigned_recruiter_id", mysql.INTEGER(), autoincrement=False, nullable=True
        ),
        sa.Column("assigned_at", mysql.DATETIME(), nullable=True),
        sa.Column("started_at", mysql.DATETIME(), nullable=True),
        sa.Column("completed_at", mysql.DATETIME(), nullable=True),
        sa.Column("failed_at", mysql.DATETIME(), nullable=True),
        sa.Column("withdrawn_at", mysql.DATETIME(), nullable=True),
        sa.Column("overall_score", mysql.DECIMAL(precision=5, scale=2), nullable=True),
        sa.Column("final_result", mysql.VARCHAR(length=50), nullable=True),
        sa.Column("notes", mysql.TEXT(), nullable=True),
        sa.Column(
            "created_at",
            mysql.DATETIME(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            mysql.DATETIME(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["assigned_recruiter_id"],
            ["users.id"],
            name="candidate_processes_ibfk_4",
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["candidate_id"],
            ["users.id"],
            name="candidate_processes_ibfk_1",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["current_node_id"],
            ["workflow_nodes.id"],
            name="candidate_processes_ibfk_3",
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["process_id"],
            ["workflows.id"],
            name="candidate_processes_ibfk_2",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
        mysql_collate="utf8mb4_0900_ai_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_index(
        "uq_candidate_process",
        "candidate_processes",
        ["candidate_id", "process_id"],
        unique=False,
    )
    op.create_index(
        "ix_candidate_processes_status_recruiter",
        "candidate_processes",
        ["status", "assigned_recruiter_id"],
        unique=False,
    )
    op.create_index(
        "ix_candidate_processes_status", "candidate_processes", ["status"], unique=False
    )
    op.create_index(
        "ix_candidate_processes_process_id",
        "candidate_processes",
        ["process_id"],
        unique=False,
    )
    op.create_index(
        "ix_candidate_processes_final_result",
        "candidate_processes",
        ["final_result"],
        unique=False,
    )
    op.create_index(
        "ix_candidate_processes_current_node_id",
        "candidate_processes",
        ["current_node_id"],
        unique=False,
    )
    op.create_index(
        "ix_candidate_processes_created_at",
        "candidate_processes",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        "ix_candidate_processes_candidate_id",
        "candidate_processes",
        ["candidate_id"],
        unique=False,
    )
    op.create_index(
        "ix_candidate_processes_assigned_recruiter_id",
        "candidate_processes",
        ["assigned_recruiter_id"],
        unique=False,
    )
    op.create_table(
        "node_executions",
        sa.Column("id", mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "candidate_process_id", mysql.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("node_id", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("status", mysql.VARCHAR(length=50), nullable=False),
        sa.Column("result", mysql.VARCHAR(length=50), nullable=True),
        sa.Column("score", mysql.DECIMAL(precision=5, scale=2), nullable=True),
        sa.Column("feedback", mysql.TEXT(), nullable=True),
        sa.Column("assessor_notes", mysql.TEXT(), nullable=True),
        sa.Column("execution_data", mysql.JSON(), nullable=True),
        sa.Column("interview_id", mysql.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("todo_id", mysql.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("started_at", mysql.DATETIME(), nullable=True),
        sa.Column("completed_at", mysql.DATETIME(), nullable=True),
        sa.Column("due_date", mysql.DATETIME(), nullable=True),
        sa.Column("assigned_to", mysql.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("completed_by", mysql.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("reviewed_by", mysql.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            mysql.DATETIME(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            mysql.DATETIME(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["assigned_to"],
            ["users.id"],
            name="node_executions_ibfk_5",
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["candidate_process_id"],
            ["candidate_processes.id"],
            name="node_executions_ibfk_1",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["completed_by"],
            ["users.id"],
            name="node_executions_ibfk_6",
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["interview_id"],
            ["interviews.id"],
            name="node_executions_ibfk_3",
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["node_id"],
            ["workflow_nodes.id"],
            name="node_executions_ibfk_2",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["reviewed_by"],
            ["users.id"],
            name="node_executions_ibfk_7",
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["todo_id"],
            ["todos.id"],
            name="node_executions_ibfk_4",
            ondelete="SET NULL",
        ),
        sa.PrimaryKeyConstraint("id"),
        mysql_collate="utf8mb4_0900_ai_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_index(
        "uq_candidate_node_execution",
        "node_executions",
        ["candidate_process_id", "node_id"],
        unique=False,
    )
    op.create_index(
        "ix_node_executions_todo_id", "node_executions", ["todo_id"], unique=False
    )
    op.create_index(
        "ix_node_executions_status_assigned",
        "node_executions",
        ["status", "assigned_to"],
        unique=False,
    )
    op.create_index(
        "ix_node_executions_status", "node_executions", ["status"], unique=False
    )
    op.create_index(
        "ix_node_executions_result", "node_executions", ["result"], unique=False
    )
    op.create_index(
        "ix_node_executions_node_id", "node_executions", ["node_id"], unique=False
    )
    op.create_index(
        "ix_node_executions_interview_id",
        "node_executions",
        ["interview_id"],
        unique=False,
    )
    op.create_index(
        "ix_node_executions_due_date", "node_executions", ["due_date"], unique=False
    )
    op.create_index(
        "ix_node_executions_created_at", "node_executions", ["created_at"], unique=False
    )
    op.create_index(
        "ix_node_executions_candidate_process_id",
        "node_executions",
        ["candidate_process_id"],
        unique=False,
    )
    op.create_index(
        "ix_node_executions_assigned_to",
        "node_executions",
        ["assigned_to"],
        unique=False,
    )

    # Drop question bank tables
    op.drop_index(
        op.f("ix_question_bank_items_category"), table_name="question_bank_items"
    )
    op.drop_index(
        op.f("ix_question_bank_items_difficulty"), table_name="question_bank_items"
    )
    op.drop_index(
        op.f("ix_question_bank_items_order_index"), table_name="question_bank_items"
    )
    op.drop_index(
        op.f("ix_question_bank_items_bank_id"), table_name="question_bank_items"
    )
    op.drop_table("question_bank_items")

    op.drop_index(op.f("ix_question_banks_is_public"), table_name="question_banks")
    op.drop_index(op.f("ix_question_banks_difficulty"), table_name="question_banks")
    op.drop_index(op.f("ix_question_banks_category"), table_name="question_banks")
    op.drop_index(op.f("ix_question_banks_exam_type"), table_name="question_banks")
    op.drop_index(op.f("ix_question_banks_company_id"), table_name="question_banks")
    op.drop_table("question_banks")
    # ### end Alembic commands ###
