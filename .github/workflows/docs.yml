name: Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Python dependencies
        run: |
          pip install sphinx sphinx-rtd-theme mkdocs mkdocs-material mkdocs-minify-plugin
          # Install backend dependencies for OpenAPI generation
          pip install -r backend/requirements.txt || echo "Some backend dependencies failed, continuing..."

      - name: Install Node.js dependencies
        env:
          CI: true
          HUSKY: 0
        run: |
          cd frontend
          npm install
          npm install -g typedoc

      - name: Generate API docs
        run: |
          cd backend
          python -c "
          import json
          from fastapi.openapi.utils import get_openapi
          from app.main import app
          with open('openapi.json', 'w') as f:
              json.dump(get_openapi(
                  title=app.title,
                  version=app.version,
                  openapi_version=app.openapi_version,
                  description=app.description,
                  routes=app.routes,
              ), f)
          "

      - name: Generate Frontend docs
        run: |
          cd frontend
          typedoc --out docs/frontend --entryPointStrategy expand src/ || echo "Frontend docs generation failed, continuing..."

      - name: Generate Backend docs
        run: |
          cd backend
          sphinx-build -b html docs/source/ docs/build/ || echo "Backend docs generation failed, continuing..."

      - name: Generate Project docs
        run: |
          mkdocs build || echo "Project docs generation failed, continuing..."

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
