{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MiraiWorks Documentation","text":"<p>Welcome to the MiraiWorks platform documentation. This comprehensive guide covers all aspects of the application from setup to deployment.</p>"},{"location":"#overview","title":"Overview","text":"<p>MiraiWorks is a modern HR and recruitment management platform built with:</p> <ul> <li>Backend: FastAPI with Python</li> <li>Frontend: React with TypeScript</li> <li>Database: PostgreSQL</li> <li>Authentication: JWT with 2FA support</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<ol> <li>Getting Started - Set up your development environment</li> <li>Development Workflow - Learn our development process</li> <li>API Reference - Explore the backend API endpoints</li> </ol>"},{"location":"#architecture","title":"Architecture","text":"<p>The application follows a clean architecture pattern with clear separation of concerns:</p> <ul> <li>Models: Database schema definitions</li> <li>Schemas: API validation and serialization</li> <li>CRUD: Database operations</li> <li>Endpoints: HTTP routing logic</li> <li>Services: Business logic and orchestration</li> </ul>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>User management with role-based permissions</li> <li>Company and job management</li> <li>Resume processing and management</li> <li>Interview scheduling and management</li> <li>Calendar integration</li> <li>Real-time notifications</li> <li>Comprehensive testing suite</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>Please refer to our development guidelines and code review process before contributing.</p>"},{"location":"ARCHITECTURE_RECOMMENDATIONS/","title":"Architecture Recommendations","text":""},{"location":"ARCHITECTURE_RECOMMENDATIONS/#1-schema-optimization","title":"1. Schema Optimization","text":"<p>Current resume schemas are well-structured but could be optimized:</p> <ul> <li>Consider breaking down large schema files (resume.py) into smaller modules</li> <li>Move validation logic into separate validator classes</li> <li>Add caching layer for frequently accessed resume data</li> <li>Implement request/response compression for large resume payloads</li> </ul>"},{"location":"ARCHITECTURE_RECOMMENDATIONS/#2-frontend-architecture","title":"2. Frontend Architecture","text":"<p>Strengths: - Clean component separation - Type safety with TypeScript - Modern Next.js 15 setup</p> <p>Areas for improvement: - Add state management solution (Redux/Zustand) - Implement component testing - Add error boundary handling - Setup performance monitoring - Add Progressive Web App capabilities</p>"},{"location":"ARCHITECTURE_RECOMMENDATIONS/#3-api-architecture","title":"3. API Architecture","text":"<p>Recommendations: - Implement API versioning - Add rate limiting - Setup response caching - Add request validation middleware - Implement comprehensive error handling - Add API documentation using OpenAPI/Swagger</p>"},{"location":"CODE_REVIEW_GUIDELINES/","title":"MiraiWorks Code Review Guidelines","text":""},{"location":"CODE_REVIEW_GUIDELINES/#pull-request-requirements","title":"\ud83d\udccb Pull Request Requirements","text":""},{"location":"CODE_REVIEW_GUIDELINES/#1-documentation","title":"1. Documentation","text":"<ul> <li>[ ] Code is well-commented using JSDoc/docstring standards</li> <li>[ ] API changes are documented in OpenAPI/Swagger</li> <li>[ ] README updates if needed</li> <li>[ ] Changelog entry added</li> <li>[ ] Type definitions are complete and accurate</li> </ul>"},{"location":"CODE_REVIEW_GUIDELINES/#2-testing","title":"2. Testing","text":"<ul> <li>[ ] Unit tests cover new functionality</li> <li>[ ] Integration tests for API changes</li> <li>[ ] Test coverage meets minimum requirements (90%)</li> <li>[ ] Edge cases are tested</li> <li>[ ] Error scenarios are covered</li> </ul>"},{"location":"CODE_REVIEW_GUIDELINES/#3-code-quality","title":"3. Code Quality","text":"<ul> <li>[ ] Follows project architecture (CLAUDE.md)</li> <li>[ ] No code smells or anti-patterns</li> <li>[ ] Consistent naming conventions</li> <li>[ ] No unnecessary complexity</li> <li>[ ] Efficient database queries</li> <li>[ ] No hardcoded values</li> </ul>"},{"location":"CODE_REVIEW_GUIDELINES/#4-security","title":"4. Security","text":"<ul> <li>[ ] Input validation is thorough</li> <li>[ ] Authentication/authorization checked</li> <li>[ ] No sensitive data exposure</li> <li>[ ] SQL injection prevention</li> <li>[ ] XSS prevention</li> <li>[ ] CSRF protection where needed</li> </ul>"},{"location":"CODE_REVIEW_GUIDELINES/#5-performance","title":"5. Performance","text":"<ul> <li>[ ] No N+1 queries</li> <li>[ ] Appropriate indexing for queries</li> <li>[ ] Efficient data structures used</li> <li>[ ] Resource-intensive operations optimized</li> <li>[ ] Caching strategy where appropriate</li> </ul>"},{"location":"CODE_REVIEW_GUIDELINES/#review-process","title":"\ud83d\udd0d Review Process","text":""},{"location":"CODE_REVIEW_GUIDELINES/#before-review","title":"Before Review","text":"<ol> <li>Run all tests locally</li> <li>Check code formatting</li> <li>Verify CI/CD pipeline passes</li> <li>Self-review using checklist</li> </ol>"},{"location":"CODE_REVIEW_GUIDELINES/#during-review","title":"During Review","text":"<ol> <li>Read the description and requirements</li> <li>Check out the branch locally</li> <li>Test the changes manually</li> <li>Review code using checklist</li> <li>Provide constructive feedback</li> </ol>"},{"location":"CODE_REVIEW_GUIDELINES/#review-comments","title":"Review Comments","text":"<ul> <li>Be specific and clear</li> <li>Explain why, not just what</li> <li>Suggest improvements</li> <li>Link to documentation/resources</li> <li>Use a collaborative tone</li> </ul>"},{"location":"CODE_REVIEW_GUIDELINES/#response-to-reviews","title":"Response to Reviews","text":"<ul> <li>Address all comments</li> <li>Explain complex changes</li> <li>Update code based on feedback</li> <li>Request re-review when ready</li> </ul>"},{"location":"CODE_REVIEW_GUIDELINES/#common-issues-to-watch-for","title":"\ud83d\udeab Common Issues to Watch For","text":""},{"location":"CODE_REVIEW_GUIDELINES/#backend","title":"Backend","text":"<ol> <li>Architecture Violations</li> <li>Business logic in endpoints</li> <li>Database queries in services</li> <li> <p>Missing input validation</p> </li> <li> <p>Database Issues</p> </li> <li>Missing indexes</li> <li>Inefficient queries</li> <li>Transaction handling</li> <li> <p>Connection management</p> </li> <li> <p>Security Issues</p> </li> <li>Missing authentication</li> <li>Improper authorization</li> <li>Unvalidated input</li> <li>Unsafe data handling</li> </ol>"},{"location":"CODE_REVIEW_GUIDELINES/#frontend","title":"Frontend","text":"<ol> <li>React/Next.js Best Practices</li> <li>Unnecessary re-renders</li> <li>Memory leaks</li> <li>Proper hook usage</li> <li> <p>Component composition</p> </li> <li> <p>TypeScript</p> </li> <li>Type safety</li> <li>Interface definitions</li> <li>Generic usage</li> <li> <p>Type assertions</p> </li> <li> <p>Performance</p> </li> <li>Bundle size</li> <li>Code splitting</li> <li>Image optimization</li> <li>State management</li> </ol>"},{"location":"CODE_REVIEW_GUIDELINES/#review-checklist-template","title":"\u2705 Review Checklist Template","text":"<pre><code>### General\n- [ ] Code follows project architecture\n- [ ] Documentation is complete\n- [ ] Tests are comprehensive\n- [ ] Performance is optimized\n- [ ] Security is addressed\n\n### Specific Areas\n- [ ] Input validation\n- [ ] Error handling\n- [ ] Logging\n- [ ] Configuration\n- [ ] Dependencies\n\n### Code Quality\n- [ ] DRY principles\n- [ ] SOLID principles\n- [ ] Clean Code practices\n- [ ] Consistent styling\n- [ ] Clear naming\n\n### Security\n- [ ] Authentication\n- [ ] Authorization\n- [ ] Data validation\n- [ ] Error messages\n- [ ] Sensitive data\n\n### Testing\n- [ ] Unit tests\n- [ ] Integration tests\n- [ ] Edge cases\n- [ ] Error scenarios\n- [ ] Coverage\n</code></pre>"},{"location":"CODE_REVIEW_GUIDELINES/#review-completion-criteria","title":"\ud83c\udfaf Review Completion Criteria","text":"<ol> <li>All checklist items addressed</li> <li>CI/CD pipeline passes</li> <li>Test coverage meets requirements</li> <li>Documentation is complete</li> <li>Security review passed</li> <li>Performance criteria met</li> </ol>"},{"location":"CODE_REVIEW_GUIDELINES/#continuous-improvement","title":"\ud83d\udcc8 Continuous Improvement","text":"<ul> <li>Review guidelines quarterly</li> <li>Update based on team feedback</li> <li>Track common issues</li> <li>Share learnings in team meetings</li> <li>Update documentation regularly</li> </ul>"},{"location":"PERFORMANCE_RECOMMENDATIONS/","title":"Performance Recommendations","text":"<ol> <li>Database Optimization</li> <li>Add indexes for frequently queried fields</li> <li>Implement query caching</li> <li>Setup database connection pooling</li> <li> <p>Add database monitoring</p> </li> <li> <p>API Performance</p> </li> <li>Implement response compression</li> <li>Add API caching layer</li> <li>Setup CDN for static assets</li> <li> <p>Optimize large response payloads</p> </li> <li> <p>Frontend Performance</p> </li> <li>Implement code splitting</li> <li>Add lazy loading for components</li> <li>Setup performance monitoring</li> <li>Optimize image loading</li> </ol>"},{"location":"RECOMMENDATIONS/","title":"MiraiWorks Project Recommendations","text":""},{"location":"RECOMMENDATIONS/#1-testing-priority-issues","title":"1. Testing Priority Issues","text":"<p>Current test coverage is critically low (~28%). Immediate actions needed:</p> <ol> <li>Fix pytest async fixture configuration issues that are blocking test execution</li> <li>Prioritize testing of high-risk endpoints:</li> <li>resumes.py (23 routes) - Critical priority</li> <li>meetings.py (13 routes) - High complexity</li> <li>interviews.py (11 routes) - High complexity</li> </ol> <p>Action items: - Resolve async fixture setup in conftest.py - Implement missing test coverage for resumes API - Follow test structure defined in CLAUDE.md - Setup CI/CD pipeline with coverage reporting</p>"},{"location":"SECURITY_RECOMMENDATIONS/","title":"Security Recommendations","text":"<ol> <li>Authentication &amp; Authorization</li> <li>Implement refresh token rotation</li> <li>Add rate limiting for auth endpoints</li> <li>Add 2FA support for all user types</li> <li> <p>Implement session management</p> </li> <li> <p>Data Protection</p> </li> <li>Add encryption for sensitive resume data</li> <li>Implement secure file upload validation</li> <li>Add PDF watermarking for downloaded resumes</li> <li> <p>Setup audit logging</p> </li> <li> <p>API Security</p> </li> <li>Add CORS configuration</li> <li>Implement request sanitization</li> <li>Add security headers</li> <li>Setup WAF rules</li> </ol>"},{"location":"WORKFLOW_RECOMMENDATIONS/","title":"Development Workflow Recommendations","text":"<ol> <li>CI/CD Improvements</li> <li>Setup automated testing in CI pipeline</li> <li>Add code quality checks</li> <li>Implement automated deployments</li> <li> <p>Add performance regression testing</p> </li> <li> <p>Code Quality</p> </li> <li>Setup ESLint/Prettier configuration:<ul> <li>ESLint for code quality and best practices</li> <li>Prettier for consistent formatting</li> <li>TypeScript-specific rules</li> <li>React/Next.js best practices</li> <li>Import sorting and organization</li> </ul> </li> <li>Add commit hooks for code formatting:<ul> <li>Husky for Git hooks management</li> <li>lint-staged for staged files</li> <li>Prettier for code formatting</li> <li>ESLint for code linting</li> <li>Black for Python formatting</li> </ul> </li> <li>Implement code review guidelines (see CODE_REVIEW_GUIDELINES.md):<ul> <li>Mandatory review checklist</li> <li>Security review requirements</li> <li>Performance review criteria</li> <li>Documentation requirements</li> </ul> </li> <li> <p>Setup automated documentation generation:</p> <ul> <li>FastAPI Swagger/OpenAPI for API docs</li> <li>TypeDoc for frontend documentation</li> <li>Sphinx for Python backend documentation</li> <li>MkDocs for project documentation</li> <li>Automated deployment to GitHub Pages</li> </ul> </li> <li> <p>Monitoring &amp; Logging</p> </li> <li>Add centralized logging</li> <li>Setup error tracking</li> <li>Implement performance monitoring</li> <li>Add user analytics</li> </ol>"},{"location":"api/","title":"MiraiWorks API Reference","text":"<p>Welcome to the MiraiWorks API documentation. This comprehensive reference covers all available endpoints, authentication methods, and usage examples.</p>"},{"location":"api/#base-url","title":"Base URL","text":"<pre><code>https://api.miraiworks.com\n</code></pre> <p>For development: <pre><code>http://localhost:8000\n</code></pre></p>"},{"location":"api/#authentication","title":"Authentication","text":"<p>MiraiWorks API uses JWT (JSON Web Tokens) for authentication. Most endpoints require a valid access token.</p>"},{"location":"api/#getting-an-access-token","title":"Getting an Access Token","text":"<pre><code>POST /api/auth/login\n</code></pre> <pre><code>{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\"\n}\n</code></pre> <p>Response: <pre><code>{\n  \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"refresh_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"expires_in\": 3600,\n  \"user\": {\n    \"id\": 123,\n    \"email\": \"user@example.com\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\"\n  }\n}\n</code></pre></p>"},{"location":"api/#using-the-access-token","title":"Using the Access Token","text":"<p>Include the token in the Authorization header:</p> <pre><code>Authorization: Bearer &lt;access_token&gt;\n</code></pre>"},{"location":"api/#api-endpoints","title":"API Endpoints","text":""},{"location":"api/#authentication_1","title":"Authentication","text":"<ul> <li>Authentication &amp; Authorization - Login, logout, token refresh, 2FA</li> </ul>"},{"location":"api/#user-management","title":"User Management","text":"<ul> <li>Users Management - Create, read, update, delete users with role-based permissions</li> </ul>"},{"location":"api/#company-management","title":"Company Management","text":"<ul> <li>Companies - Manage company accounts and settings</li> </ul>"},{"location":"api/#job-management","title":"Job Management","text":"<ul> <li>Jobs - Create and manage job postings</li> </ul>"},{"location":"api/#application-management","title":"Application Management","text":"<ul> <li>Applications - Handle job applications and candidate management</li> </ul>"},{"location":"api/#calendar-interviews","title":"Calendar &amp; Interviews","text":"<ul> <li>Calendar - Schedule and manage interviews</li> <li>Interviews - Interview management and feedback</li> </ul>"},{"location":"api/#file-management","title":"File Management","text":"<ul> <li>Files - Upload and manage resumes and documents</li> </ul>"},{"location":"api/#messages","title":"Messages","text":"<ul> <li>Messages - Direct messaging between users</li> </ul>"},{"location":"api/#notifications","title":"Notifications","text":"<ul> <li>Notifications - Real-time notifications and alerts</li> </ul>"},{"location":"api/#rate-limiting","title":"Rate Limiting","text":"<p>The API implements rate limiting to ensure fair usage:</p> <ul> <li>Standard endpoints: 100 requests per minute per user</li> <li>Bulk operations: 10 requests per minute per user</li> <li>File uploads: 20 requests per minute per user</li> </ul> <p>Rate limit headers are included in responses: <pre><code>X-RateLimit-Limit: 100\nX-RateLimit-Remaining: 95\nX-RateLimit-Reset: 1640995200\n</code></pre></p>"},{"location":"api/#error-handling","title":"Error Handling","text":""},{"location":"api/#standard-error-codes","title":"Standard Error Codes","text":"Code Description 400 Bad Request - Invalid input data 401 Unauthorized - Authentication required 403 Forbidden - Insufficient permissions 404 Not Found - Resource does not exist 422 Unprocessable Entity - Validation error 429 Too Many Requests - Rate limit exceeded 500 Internal Server Error - Server error"},{"location":"api/#error-response-format","title":"Error Response Format","text":"<pre><code>{\n  \"detail\": \"Error description\"\n}\n</code></pre> <p>For validation errors: <pre><code>{\n  \"detail\": [\n    {\n      \"loc\": [\"field_name\"],\n      \"msg\": \"Field is required\",\n      \"type\": \"missing\"\n    }\n  ]\n}\n</code></pre></p>"},{"location":"api/#permission-system","title":"Permission System","text":"<p>MiraiWorks uses a role-based access control (RBAC) system with the following roles:</p>"},{"location":"api/#super-admin","title":"Super Admin","text":"<ul> <li>Full system access</li> <li>Can manage all companies and users</li> <li>Can assign any role including super_admin</li> <li>Platform-wide administrative capabilities</li> </ul>"},{"location":"api/#company-admin","title":"Company Admin","text":"<ul> <li>Full access within their company</li> <li>Can manage company users and settings</li> <li>Cannot access other companies' data</li> <li>Cannot assign super_admin role</li> </ul>"},{"location":"api/#recruiter","title":"Recruiter","text":"<ul> <li>Can manage job postings and applications</li> <li>Can schedule interviews</li> <li>Can view candidate profiles</li> <li>Company-scoped access</li> </ul>"},{"location":"api/#employer","title":"Employer","text":"<ul> <li>Similar to recruiter with additional hiring permissions</li> <li>Can make final hiring decisions</li> <li>Can access advanced reporting</li> </ul>"},{"location":"api/#candidate","title":"Candidate","text":"<ul> <li>Can apply to jobs</li> <li>Can manage their profile and resume</li> <li>Can participate in interviews</li> <li>Read-only access to job listings</li> </ul>"},{"location":"api/#pagination","title":"Pagination","text":"<p>List endpoints support pagination using query parameters:</p> <pre><code>GET /api/admin/users?page=1&amp;size=20\n</code></pre> <p>Response includes pagination metadata: <pre><code>{\n  \"data\": [...],\n  \"total\": 150,\n  \"pages\": 8,\n  \"page\": 1,\n  \"per_page\": 20\n}\n</code></pre></p>"},{"location":"api/#filtering-and-search","title":"Filtering and Search","text":"<p>Most list endpoints support filtering and search:</p> <pre><code>GET /api/admin/users?search=john&amp;is_active=true&amp;role=recruiter\n</code></pre> <p>Common filter parameters: - <code>search</code> - Text search across relevant fields - <code>is_active</code> - Filter by active status - <code>company_id</code> - Filter by company (super admin only) - <code>role</code> - Filter by user role - <code>created_after</code> - Filter by creation date - <code>updated_after</code> - Filter by last update</p>"},{"location":"api/#data-formats","title":"Data Formats","text":""},{"location":"api/#dates-and-times","title":"Dates and Times","text":"<p>All timestamps are in ISO 8601 format with UTC timezone: <pre><code>2024-01-01T12:30:45Z\n</code></pre></p>"},{"location":"api/#phone-numbers","title":"Phone Numbers","text":"<p>Phone numbers should include country code: <pre><code>+1-555-123-4567\n</code></pre></p>"},{"location":"api/#email-addresses","title":"Email Addresses","text":"<p>Must be valid email format: <pre><code>user@example.com\n</code></pre></p>"},{"location":"api/#file-uploads","title":"File Uploads","text":"<p>File uploads use multipart/form-data:</p> <pre><code>curl -X POST \"https://api.miraiworks.com/api/files/upload\" \\\n  -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  -F \"file=@resume.pdf\" \\\n  -F \"type=resume\"\n</code></pre> <p>Supported file types: - Documents: PDF, DOC, DOCX (max 10MB) - Images: JPG, PNG, GIF (max 5MB)</p>"},{"location":"api/#webhooks","title":"Webhooks","text":"<p>MiraiWorks supports webhooks for real-time event notifications:</p> <ul> <li>User creation/updates</li> <li>Job application submissions</li> <li>Interview scheduling</li> <li>Status changes</li> </ul> <p>Webhook configuration is available in the admin panel.</p>"},{"location":"api/#sdk-and-libraries","title":"SDK and Libraries","text":"<p>Official SDKs are available for: - JavaScript/TypeScript - Python - PHP - Ruby</p> <p>Community libraries are available for other languages.</p>"},{"location":"api/#support","title":"Support","text":"<p>For API support: - Documentation: https://docs.miraiworks.com - Support: support@miraiworks.com - Status Page: https://status.miraiworks.com</p>"},{"location":"api/#changelog","title":"Changelog","text":""},{"location":"api/#v120-2024-01-15","title":"v1.2.0 (2024-01-15)","text":"<ul> <li>Added enhanced role-based permissions for company admins</li> <li>Improved user creation validation</li> <li>Added bulk operations support</li> <li>Enhanced security measures</li> </ul>"},{"location":"api/#v110-2024-01-01","title":"v1.1.0 (2024-01-01)","text":"<ul> <li>Added 2FA support</li> <li>Improved error handling</li> <li>Added rate limiting</li> <li>Enhanced file upload capabilities</li> </ul>"},{"location":"api/#v100-2023-12-01","title":"v1.0.0 (2023-12-01)","text":"<ul> <li>Initial API release</li> <li>Core user and company management</li> <li>Authentication and authorization</li> <li>Basic job and application management</li> </ul>"},{"location":"api/users/","title":"Users Management API","text":"<p>The Users Management API provides endpoints for managing user accounts, roles, and permissions within the MiraiWorks platform.</p>"},{"location":"api/users/#overview","title":"Overview","text":"<p>This API allows administrators to: - Create, read, update, and delete user accounts - Manage user roles and permissions - Handle user suspension and activation - Reset passwords and resend activation emails - Perform bulk operations on multiple users</p>"},{"location":"api/users/#authentication","title":"Authentication","text":"<p>All endpoints require authentication using a Bearer token in the Authorization header:</p> <pre><code>Authorization: Bearer &lt;access_token&gt;\n</code></pre>"},{"location":"api/users/#permission-levels","title":"Permission Levels","text":""},{"location":"api/users/#super-admin","title":"Super Admin","text":"<ul> <li>Full access to all user management operations</li> <li>Can manage users across all companies</li> <li>Can assign any role including <code>super_admin</code></li> <li>Can create and manage company admin accounts</li> </ul>"},{"location":"api/users/#company-admin","title":"Company Admin","text":"<ul> <li>Can manage users within their own company only</li> <li>Cannot assign <code>super_admin</code> role</li> <li>Cannot create users for other companies</li> <li>Cannot move users between companies</li> <li>Can assign roles: <code>candidate</code>, <code>recruiter</code>, <code>employer</code>, <code>company_admin</code></li> </ul>"},{"location":"api/users/#regular-users","title":"Regular Users","text":"<ul> <li>Cannot access user management endpoints</li> <li>Can only view/update their own profile</li> </ul>"},{"location":"api/users/#endpoints","title":"Endpoints","text":""},{"location":"api/users/#create-user","title":"Create User","text":"<p>POST <code>/api/admin/users</code></p> <p>Creates a new user account.</p>"},{"location":"api/users/#permission-requirements","title":"Permission Requirements","text":"<ul> <li>Super Admin: Can create users for any company with any role</li> <li>Company Admin: Can only create users for their own company, limited role assignments</li> </ul>"},{"location":"api/users/#request-body","title":"Request Body","text":"<pre><code>{\n  \"email\": \"string\",\n  \"first_name\": \"string\",\n  \"last_name\": \"string\",\n  \"phone\": \"string (optional)\",\n  \"company_id\": \"integer (optional for super admin, auto-set for company admin)\",\n  \"roles\": [\"candidate\", \"recruiter\", \"employer\", \"company_admin\"],\n  \"is_admin\": \"boolean (optional)\",\n  \"require_2fa\": \"boolean (optional)\"\n}\n</code></pre>"},{"location":"api/users/#company-admin-restrictions","title":"Company Admin Restrictions","text":"<ul> <li><code>company_id</code> is automatically set to the admin's company</li> <li>Cannot assign <code>super_admin</code> role</li> <li>Cannot specify a different <code>company_id</code></li> </ul>"},{"location":"api/users/#response","title":"Response","text":"<pre><code>{\n  \"id\": 123,\n  \"email\": \"user@example.com\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"full_name\": \"John Doe\",\n  \"phone\": \"+1-555-0123\",\n  \"company_id\": 1,\n  \"company_name\": \"Example Corp\",\n  \"roles\": [\"recruiter\"],\n  \"is_active\": false,\n  \"is_admin\": false,\n  \"require_2fa\": false,\n  \"created_at\": \"2024-01-01T00:00:00Z\",\n  \"updated_at\": \"2024-01-01T00:00:00Z\"\n}\n</code></pre>"},{"location":"api/users/#error-responses","title":"Error Responses","text":"<ul> <li><code>400 Bad Request</code>: Invalid input data or duplicate email</li> <li><code>403 Forbidden</code>: Insufficient permissions or role assignment restrictions</li> <li><code>404 Not Found</code>: Specified company does not exist</li> </ul>"},{"location":"api/users/#get-users","title":"Get Users","text":"<p>GET <code>/api/admin/users</code></p> <p>Retrieves a paginated list of users with optional filtering.</p>"},{"location":"api/users/#permission-requirements_1","title":"Permission Requirements","text":"<ul> <li>Super Admin: Can view all users</li> <li>Company Admin: Can only view users from their own company</li> </ul>"},{"location":"api/users/#query-parameters","title":"Query Parameters","text":"Parameter Type Description Default <code>page</code> integer Page number (\u22651) 1 <code>size</code> integer Page size (1-100) 20 <code>search</code> string Search by name or email - <code>company_id</code> integer Filter by company - <code>is_active</code> boolean Filter by active status - <code>is_admin</code> boolean Filter by admin status - <code>is_suspended</code> boolean Filter by suspension status - <code>require_2fa</code> boolean Filter by 2FA requirement - <code>role</code> string Filter by role - <code>include_deleted</code> boolean Include deleted users false"},{"location":"api/users/#company-admin-filtering","title":"Company Admin Filtering","text":"<ul> <li><code>company_id</code> parameter is automatically set to admin's company</li> <li>Cannot view users from other companies</li> </ul>"},{"location":"api/users/#response_1","title":"Response","text":"<pre><code>{\n  \"users\": [\n    {\n      \"id\": 123,\n      \"email\": \"user@example.com\",\n      \"first_name\": \"John\",\n      \"last_name\": \"Doe\",\n      \"full_name\": \"John Doe\",\n      \"phone\": \"+1-555-0123\",\n      \"company_id\": 1,\n      \"company_name\": \"Example Corp\",\n      \"roles\": [\"recruiter\"],\n      \"is_active\": true,\n      \"is_admin\": false,\n      \"require_2fa\": false,\n      \"last_login\": \"2024-01-01T12:00:00Z\",\n      \"created_at\": \"2024-01-01T00:00:00Z\",\n      \"updated_at\": \"2024-01-01T00:00:00Z\",\n      \"is_deleted\": false,\n      \"is_suspended\": false\n    }\n  ],\n  \"total\": 150,\n  \"pages\": 8,\n  \"page\": 1,\n  \"per_page\": 20\n}\n</code></pre>"},{"location":"api/users/#get-user-by-id","title":"Get User by ID","text":"<p>GET <code>/api/admin/users/{user_id}</code></p> <p>Retrieves details for a specific user.</p>"},{"location":"api/users/#permission-requirements_2","title":"Permission Requirements","text":"<ul> <li>Super Admin: Can view any user</li> <li>Company Admin: Can only view users from their own company</li> <li>Regular User: Can only view their own profile</li> </ul>"},{"location":"api/users/#response_2","title":"Response","text":"<p>Same as user object in the list response.</p>"},{"location":"api/users/#update-user","title":"Update User","text":"<p>PUT <code>/api/admin/users/{user_id}</code></p> <p>Updates an existing user account.</p>"},{"location":"api/users/#permission-requirements_3","title":"Permission Requirements","text":"<ul> <li>Super Admin: Can update any user</li> <li>Company Admin: Can only update users from their own company with restrictions</li> </ul>"},{"location":"api/users/#request-body_1","title":"Request Body","text":"<pre><code>{\n  \"first_name\": \"string (optional)\",\n  \"last_name\": \"string (optional)\",\n  \"phone\": \"string (optional)\",\n  \"is_active\": \"boolean (optional)\",\n  \"is_admin\": \"boolean (optional)\",\n  \"require_2fa\": \"boolean (optional)\",\n  \"company_id\": \"integer (optional)\",\n  \"roles\": [\"role1\", \"role2\"] // optional\n}\n</code></pre>"},{"location":"api/users/#company-admin-restrictions_1","title":"Company Admin Restrictions","text":"<ul> <li>Cannot assign <code>super_admin</code> role</li> <li>Cannot change <code>company_id</code> to a different company</li> <li>Cannot update users from other companies</li> </ul>"},{"location":"api/users/#response_3","title":"Response","text":"<p>Same as user object in the create response.</p>"},{"location":"api/users/#delete-user","title":"Delete User","text":"<p>DELETE <code>/api/admin/users/{user_id}</code></p> <p>Soft deletes a user account (logical deletion).</p>"},{"location":"api/users/#permission-requirements_4","title":"Permission Requirements","text":"<ul> <li>Super Admin: Can delete any user except themselves</li> <li>Company Admin: Can delete users from their own company except themselves</li> </ul>"},{"location":"api/users/#response_4","title":"Response","text":"<pre><code>{\n  \"message\": \"User deleted successfully\"\n}\n</code></pre>"},{"location":"api/users/#restrictions","title":"Restrictions","text":"<ul> <li>Users cannot delete their own account</li> <li>Company admins cannot delete users from other companies</li> </ul>"},{"location":"api/users/#suspend-user","title":"Suspend User","text":"<p>POST <code>/api/admin/users/{user_id}/suspend</code></p> <p>Suspends a user account, preventing login.</p>"},{"location":"api/users/#permission-requirements_5","title":"Permission Requirements","text":"<ul> <li>Super Admin: Can suspend any user except themselves</li> <li>Company Admin: Can suspend users from their own company except themselves</li> </ul>"},{"location":"api/users/#response_5","title":"Response","text":"<pre><code>{\n  \"message\": \"User suspended successfully\",\n  \"is_suspended\": true\n}\n</code></pre>"},{"location":"api/users/#unsuspend-user","title":"Unsuspend User","text":"<p>POST <code>/api/admin/users/{user_id}/unsuspend</code></p> <p>Reactivates a suspended user account.</p>"},{"location":"api/users/#permission-requirements_6","title":"Permission Requirements","text":"<ul> <li>Super Admin: Can unsuspend any user</li> <li>Company Admin: Can unsuspend users from their own company</li> </ul>"},{"location":"api/users/#response_6","title":"Response","text":"<pre><code>{\n  \"message\": \"User unsuspended successfully\",\n  \"is_suspended\": false\n}\n</code></pre>"},{"location":"api/users/#reset-password","title":"Reset Password","text":"<p>POST <code>/api/admin/users/{user_id}/reset-password</code></p> <p>Resets a user's password and optionally sends an email.</p>"},{"location":"api/users/#request-body_2","title":"Request Body","text":"<pre><code>{\n  \"send_email\": true\n}\n</code></pre>"},{"location":"api/users/#permission-requirements_7","title":"Permission Requirements","text":"<ul> <li>Super Admin: Can reset password for any user</li> <li>Company Admin: Can reset passwords for users in their own company</li> </ul>"},{"location":"api/users/#response_7","title":"Response","text":"<pre><code>{\n  \"message\": \"Password reset successfully\",\n  \"temporary_password\": \"abc123def456\" // Only included if send_email is false\n}\n</code></pre>"},{"location":"api/users/#resend-activation-email","title":"Resend Activation Email","text":"<p>POST <code>/api/admin/users/{user_id}/resend-activation</code></p> <p>Resends activation email to an inactive user.</p>"},{"location":"api/users/#permission-requirements_8","title":"Permission Requirements","text":"<ul> <li>Super Admin: Can resend activation for any user</li> <li>Company Admin: Can resend activation for users in their own company</li> </ul>"},{"location":"api/users/#response_8","title":"Response","text":"<pre><code>{\n  \"message\": \"Activation email sent successfully\"\n}\n</code></pre>"},{"location":"api/users/#bulk-operations","title":"Bulk Operations","text":""},{"location":"api/users/#bulk-suspend","title":"Bulk Suspend","text":"<p>POST <code>/api/admin/users/bulk/suspend</code></p> <p>Suspends multiple users at once.</p>"},{"location":"api/users/#request-body_3","title":"Request Body","text":"<pre><code>{\n  \"user_ids\": [1, 2, 3, 4],\n  \"reason\": \"Policy violation\"\n}\n</code></pre>"},{"location":"api/users/#response_9","title":"Response","text":"<pre><code>{\n  \"message\": \"Successfully suspended 3 user(s)\",\n  \"suspended_count\": 3,\n  \"errors\": [\"Cannot suspend user 1 from other company\"]\n}\n</code></pre>"},{"location":"api/users/#bulk-unsuspend","title":"Bulk Unsuspend","text":"<p>POST <code>/api/admin/users/bulk/unsuspend</code></p> <p>Unsuspends multiple users at once.</p>"},{"location":"api/users/#request-body_4","title":"Request Body","text":"<pre><code>{\n  \"user_ids\": [1, 2, 3, 4]\n}\n</code></pre>"},{"location":"api/users/#bulk-delete","title":"Bulk Delete","text":"<p>POST <code>/api/admin/users/bulk/delete</code></p> <p>Soft deletes multiple users at once.</p>"},{"location":"api/users/#request-body_5","title":"Request Body","text":"<pre><code>{\n  \"user_ids\": [1, 2, 3, 4]\n}\n</code></pre>"},{"location":"api/users/#bulk-password-reset","title":"Bulk Password Reset","text":"<p>POST <code>/api/admin/users/bulk/reset-password</code></p> <p>Resets passwords for multiple users at once.</p>"},{"location":"api/users/#request-body_6","title":"Request Body","text":"<pre><code>{\n  \"user_ids\": [1, 2, 3, 4],\n  \"send_email\": true\n}\n</code></pre>"},{"location":"api/users/#response_10","title":"Response","text":"<pre><code>{\n  \"message\": \"Successfully reset passwords for 3 user(s)\",\n  \"reset_count\": 3,\n  \"errors\": [],\n  \"temporary_passwords\": {\n    \"1\": \"abc123\",\n    \"2\": \"def456\",\n    \"3\": \"ghi789\"\n  }\n}\n</code></pre>"},{"location":"api/users/#bulk-resend-activation","title":"Bulk Resend Activation","text":"<p>POST <code>/api/admin/users/bulk/resend-activation</code></p> <p>Resends activation emails to multiple inactive users.</p>"},{"location":"api/users/#request-body_7","title":"Request Body","text":"<pre><code>{\n  \"user_ids\": [1, 2, 3, 4]\n}\n</code></pre>"},{"location":"api/users/#error-handling","title":"Error Handling","text":""},{"location":"api/users/#common-error-codes","title":"Common Error Codes","text":"<ul> <li><code>400 Bad Request</code>: Invalid input data, validation errors</li> <li><code>401 Unauthorized</code>: Missing or invalid authentication token</li> <li><code>403 Forbidden</code>: Insufficient permissions for the requested operation</li> <li><code>404 Not Found</code>: User or resource not found</li> <li><code>422 Unprocessable Entity</code>: Request validation failed</li> </ul>"},{"location":"api/users/#error-response-format","title":"Error Response Format","text":"<pre><code>{\n  \"detail\": \"Error description\"\n}\n</code></pre> <p>For validation errors:</p> <pre><code>{\n  \"detail\": [\n    {\n      \"loc\": [\"field_name\"],\n      \"msg\": \"Field is required\",\n      \"type\": \"missing\"\n    }\n  ]\n}\n</code></pre>"},{"location":"api/users/#role-based-access-control-summary","title":"Role-Based Access Control Summary","text":"Operation Super Admin Company Admin Regular User Create user \u2705 Any company \u2705 Own company only \u274c View users \u2705 All users \u2705 Own company only \u274c Update user \u2705 Any user \u2705 Own company only \u274c Delete user \u2705 Any user (not self) \u2705 Own company only (not self) \u274c Assign super_admin role \u2705 \u274c \u274c Move users between companies \u2705 \u274c \u274c Bulk operations \u2705 Any users \u2705 Own company only \u274c"},{"location":"api/users/#security-considerations","title":"Security Considerations","text":"<ol> <li>Company Isolation: Company admins can only access users within their own company</li> <li>Role Restrictions: Company admins cannot assign super_admin roles</li> <li>Self-Protection: Users cannot delete or suspend their own accounts</li> <li>Audit Trail: All user operations are logged for compliance</li> <li>Password Security: Temporary passwords are securely generated and can be sent via email</li> <li>2FA Enforcement: Admin users automatically require 2FA for enhanced security</li> </ol>"},{"location":"api/users/#examples","title":"Examples","text":""},{"location":"api/users/#creating-a-user-as-company-admin","title":"Creating a User as Company Admin","text":"<pre><code>curl -X POST \"https://api.miraiworks.com/api/admin/users\" \\\n  -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"email\": \"newuser@example.com\",\n    \"first_name\": \"Jane\",\n    \"last_name\": \"Smith\",\n    \"phone\": \"+1-555-0199\",\n    \"roles\": [\"recruiter\"]\n  }'\n</code></pre>"},{"location":"api/users/#filtering-users-by-role","title":"Filtering Users by Role","text":"<pre><code>curl -X GET \"https://api.miraiworks.com/api/admin/users?role=recruiter&amp;is_active=true&amp;page=1&amp;size=10\" \\\n  -H \"Authorization: Bearer YOUR_TOKEN\"\n</code></pre>"},{"location":"api/users/#bulk-password-reset_1","title":"Bulk Password Reset","text":"<pre><code>curl -X POST \"https://api.miraiworks.com/api/admin/users/bulk/reset-password\" \\\n  -H \"Authorization: Bearer YOUR_TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"user_ids\": [123, 456, 789],\n    \"send_email\": true\n  }'\n</code></pre>"}]}