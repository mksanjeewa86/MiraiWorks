name: Documentation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Python dependencies
        run: |
          pip install sphinx sphinx-rtd-theme mkdocs mkdocs-material mkdocs-minify-plugin
          # Install backend dependencies for OpenAPI generation
          pip install -r backend/requirements.txt || echo "Some backend dependencies failed, continuing..."

      - name: Install Node.js dependencies
        env:
          CI: true
          HUSKY: 0
        run: |
          cd frontend
          npm install
          npm install -g typedoc

      - name: Generate API docs
        run: |
          cd backend
          python -c "
          import json
          from fastapi.openapi.utils import get_openapi
          from app.main import app
          with open('openapi.json', 'w') as f:
              json.dump(get_openapi(
                  title=app.title,
                  version=app.version,
                  openapi_version=app.openapi_version,
                  description=app.description,
                  routes=app.routes,
              ), f)
          "

      - name: Generate Frontend docs
        run: |
          cd frontend
          typedoc --out docs/frontend --entryPointStrategy expand src/ || echo "Frontend docs generation failed, continuing..."

      - name: Generate Backend docs
        run: |
          cd backend
          sphinx-build -b html docs/source/ docs/build/ || echo "Backend docs generation failed, continuing..."

      - name: Generate Project docs
        run: |
          mkdocs build || echo "Project docs generation failed, continuing..."

      - name: Upload pages artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: docs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        continue-on-error: true

      - name: Pages deployment status
        if: failure()
        run: |
          echo "⚠️ GitHub Pages deployment failed. This is likely because:"
          echo "1. GitHub Pages is not enabled for this repository"
          echo "2. Pages source is not set to 'GitHub Actions'"
          echo ""
          echo "To fix this:"
          echo "1. Go to: https://github.com/mksanjeewa86/MiraiWorks/settings/pages"
          echo "2. Under 'Source', select 'GitHub Actions'"
          echo "3. Re-run this workflow"
          echo ""
          echo "Documentation was built successfully and is available as an artifact."
